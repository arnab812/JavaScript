/*
 * JSON => JavaScript Object Notation [ Text-based data format - used to 'store' and 'transfer data' ]
        => Light-weight data interchange format | Language independent | Data get stored in key-value pairs separated by commas.
*/

// JSON syntax :
let JavaScript_Object = {
  name: "Arnab",
  age: 22,
  gender: "male",
};

// ? => JavaScript_Object -> JSON object :

// ! Important : Object to JSON : JavaScript objects ---> (JSON.stringify()) ---> JSON
// * JavaScript object :
const JSON_Data = { name: "Abhishek", age: 24 };

// * Convert to JSON object :
const Object = JSON.stringify(JSON_Data);

// ! => JSON -> JavaScript_Object : JSON ---> (parse()) ---> JavaScript objects

// * JSON object :
const jsonString = '{"name": "John", "age": 30}';

// * JavaScript object :
const obj = JSON.parse(jsonString);
console.log(obj); // { name: 'John', age: 30 }

// ? Accessing JSON data : [using - dot (.) notation or square bracket syntax[]]
const data = {
  name: "Soumitra",
  age: 54,
  hobby: {
    reading: true,
    gaming: false,
    favourite_sport: "football",
  },
  specialization: ["JavaScript", "TypeScript", "React"],
};

// * Accessing JSON object :
console.log(data.name); // Soumitra
console.log(data["name"]); // Soumitra

console.log(data.hobby);

console.log(data.hobby.sport); // football
console.log(data.specialization[1]); // TypeScript

// ! Differences between JavaScript objects and JSON :
/*
JS objects can have functions as values, while JSON does not support functions.
JSON is a text format that is used for data exchange, while JS objects are a data structure used within JavaScript.
JSON requires all keys to be surrounded by double quotes, while JS object keys do not necessarily need to be quoted. 
*/


// .stringify(object) || .parse(json)


// ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ // 


// * Commit - 02 : 
=> What is JSON ? 
    JSON is the abbreviated form of - JavaScript Object Notation, is a standard text-based data format used in web development
    to send and receive the data. 

    - JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is easy for humans to read and write.
    It is easy for machines to parse and generate.

    - It is based on a subset of the JavaScript Programming Language.

    - JSON is a text format that is completely language independent but uses conventions that are familiar to programmers
      of the C-family of languages, including C, C++, C#, Java, JavaScript, Perl, Python, and many others.
      These properties make JSON an ideal data-interchange language.

=> Advantages of using JSON : 
    - It is supported by all programming languages. 
    - It can be used on all platforms. 
    - It is a light-weight database standard, so that the data transmission is fast. 

=> Where JSON is used ? 
    - Web Applications 
    - APIs 
    - Mobile Applications 
    - Gaming APIs 
    - IOT 

=> Data types supported in JSON : 
    - String 
    - Number 
    - Arrays 
    - Null 
    - Boolean 
    - Object 

=> JSON methods in JavaScript : 
    - JSON.parse() : Takes JSON string and convert into JavaScript Object 
    - JSON.stringify : Convert JavaScript Object (JSON) into JSON string (useful while sending over the network)



=> Structure of JSON : 
    JSON is built on two structures:

    A collection of name/value pairs. In various languages, this is realized as an - 
                                                                                    object,
                                                                                    record,
                                                                                    struct,
                                                                                    dictionary,
                                                                                    hash table,
                                                                                    keyed list,
                                                                                    or associative array.
    An ordered list of values. In most languages, this is realized as an - 
                                                                            array, 
                                                                            vector, 
                                                                            list, 
                                                                            or sequence.
    These are universal data structures. Virtually all modern programming languages support them in one form or another. It makes sense that a data format that is 
    Interchangeable with programming languages also be based on these structures.


// Key Takeaways : 
    1. // Comment(s) inside a JSON file is/are not allowed.  
    2. Interchangeable properties among different programming languages are based on the universal data structures that JSON supports. 

Reference : https://www.json.org/json-en.html
